
#!/bin/bash

# FinPlanner Deployment Script
# Usage: ./deploy.sh [environment]
# Environments: development, staging, production

set -e

ENVIRONMENT=${1:-production}
APP_NAME="finplanner"
APP_DIR="/var/www/finplanner"
BACKUP_DIR="/var/backups/finplanner"
LOG_FILE="/var/log/finplanner-deploy.log"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a $LOG_FILE
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1" | tee -a $LOG_FILE
    exit 1
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1" | tee -a $LOG_FILE
}

# Check if running as root
if [[ $EUID -eq 0 ]]; then
   error "This script should not be run as root for security reasons"
fi

# Check if environment is valid
if [[ ! "$ENVIRONMENT" =~ ^(development|staging|production)$ ]]; then
    error "Invalid environment. Use: development, staging, or production"
fi

log "Starting deployment for environment: $ENVIRONMENT"

# Create necessary directories
sudo mkdir -p $BACKUP_DIR
sudo mkdir -p $(dirname $LOG_FILE)
sudo chown $USER:$USER $BACKUP_DIR $(dirname $LOG_FILE)

# Backup current deployment
if [ -d "$APP_DIR" ]; then
    log "Creating backup of current deployment..."
    BACKUP_NAME="finplanner-backup-$(date +%Y%m%d-%H%M%S)"
    sudo cp -r $APP_DIR $BACKUP_DIR/$BACKUP_NAME
    log "Backup created: $BACKUP_DIR/$BACKUP_NAME"
fi

# Database backup
log "Creating database backup..."
if [ "$ENVIRONMENT" = "production" ]; then
    DB_BACKUP_FILE="$BACKUP_DIR/db-backup-$(date +%Y%m%d-%H%M%S).sql"
    pg_dump $DATABASE_URL > $DB_BACKUP_FILE
    log "Database backup created: $DB_BACKUP_FILE"
fi

# Pull latest code
log "Pulling latest code..."
cd $APP_DIR
git fetch origin
git checkout main
git pull origin main

# Install dependencies
log "Installing dependencies..."
cd app
npm ci --production=false

# Generate Prisma client
log "Generating Prisma client..."
npx prisma generate

# Run database migrations
log "Running database migrations..."
npx prisma migrate deploy

# Build application
log "Building application..."
npm run build

# Restart application
log "Restarting application..."
if command -v pm2 &> /dev/null; then
    pm2 reload ecosystem.config.js --env $ENVIRONMENT
elif command -v systemctl &> /dev/null; then
    sudo systemctl restart finplanner
else
    warning "No process manager found. Please restart the application manually."
fi

# Health check
log "Performing health check..."
sleep 10
if curl -f http://localhost:3000/health > /dev/null 2>&1; then
    log "Health check passed. Deployment successful!"
else
    error "Health check failed. Please check the application logs."
fi

# Cleanup old backups (keep last 5)
log "Cleaning up old backups..."
cd $BACKUP_DIR
ls -t | tail -n +6 | xargs -r rm -rf

log "Deployment completed successfully for environment: $ENVIRONMENT"
log "Application is running at: http://localhost:3000"

# Send notification (optional)
if command -v mail &> /dev/null; then
    echo "FinPlanner deployment completed successfully for $ENVIRONMENT environment" | mail -s "Deployment Success" admin@your-domain.com
fi
