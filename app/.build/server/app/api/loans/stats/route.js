"use strict";(()=>{var e={};e.id=6355,e.ids=[6355],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8414:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{GET:()=>p,dynamic:()=>l});var n=r(921),s=r(7380),o=r(4185),i=r(3878),u=r(9958);let l="force-dynamic";async function p(){try{let[e,t]=await Promise.all([u._.loan.findMany({include:{payments:!0}}),u._.loanPayment.aggregate({_sum:{interestPaid:!0}})]),r=e.length,a=e.reduce((e,t)=>e+t.currentBalance,0),n=e.reduce((e,t)=>e+t.emiAmount,0),s=t._sum.interestPaid||0,o=e.reduce((e,t)=>e+t.interestRate,0),l=e.length>0?o/e.length:0;return i.NextResponse.json({totalLoans:r,totalDebt:a,monthlyEMI:n,totalInterestPaid:s,averageInterestRate:Math.round(100*l)/100})}catch(e){return console.error("Error fetching loan stats:",e),i.NextResponse.json({error:"Failed to fetch loan stats"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/loans/stats/route",pathname:"/api/loans/stats",filename:"route",bundlePath:"app/api/loans/stats/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/loans/stats/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h}=d,g="/api/loans/stats/route";function x(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},9958:(e,t,r)=>{r.d(t,{_:()=>n,db:()=>s});var a=r(3524);let n=globalThis.prisma??new a.PrismaClient,s=n}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[5923,7146],()=>r(8414));module.exports=a})();