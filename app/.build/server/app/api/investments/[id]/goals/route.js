"use strict";(()=>{var e={};e.id=8540,e.ids=[8540],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7916:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>m,serverHooks:()=>v,staticGenerationAsyncStorage:()=>g});var r={};n.r(r),n.d(r,{GET:()=>d,POST:()=>p,dynamic:()=>u});var o=n(921),s=n(7380),i=n(4185),a=n(3878),l=n(2334);let u="force-dynamic";async function d(e,{params:t}){try{let e=t.id,n=await l.db.investment.findUnique({where:{id:e},include:{goal:{select:{id:!0,name:!0,goalType:!0,targetAmount:!0,currentAmount:!0}},goalLinks:{include:{goal:{select:{id:!0,name:!0,goalType:!0,targetAmount:!0,currentAmount:!0}}}}}});if(!n)return a.NextResponse.json({error:"Investment not found"},{status:404});let r=[];return n.goal&&r.push({...n.goal,allocation:100,linkType:"direct",linkId:null}),n.goalLinks&&n.goalLinks.forEach(e=>{r.push({...e.goal,allocation:e.allocation,linkType:"linked",linkId:e.id})}),a.NextResponse.json({investment:{id:n.id,name:n.name,currentValue:n.currentValue,totalInvested:n.totalInvested},linkedGoals:r})}catch(e){return console.error("Error fetching investment goals:",e),a.NextResponse.json({error:"Failed to fetch investment goals"},{status:500})}}async function p(e,{params:t}){try{let n=t.id,{goalId:r,allocation:o=100,notes:s}=await e.json();if(!r)return a.NextResponse.json({error:"Goal ID is required"},{status:400});if(o<0||o>100)return a.NextResponse.json({error:"Allocation must be between 0 and 100"},{status:400});if(!await l.db.investment.findUnique({where:{id:n}}))return a.NextResponse.json({error:"Investment not found"},{status:404});if(!await l.db.financialGoal.findUnique({where:{id:r}}))return a.NextResponse.json({error:"Goal not found"},{status:404});if(await l.db.investmentGoalLink.findUnique({where:{investmentId_goalId:{investmentId:n,goalId:r}}}))return a.NextResponse.json({error:"Goal is already linked to this investment"},{status:400});let i=await l.db.investmentGoalLink.create({data:{investmentId:n,goalId:r,allocation:o,notes:s},include:{investment:!0,goal:!0}});return a.NextResponse.json(i,{status:201})}catch(e){return console.error("Error linking goal to investment:",e),a.NextResponse.json({error:"Failed to link goal to investment"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/investments/[id]/goals/route",pathname:"/api/investments/[id]/goals",filename:"route",bundlePath:"app/api/investments/[id]/goals/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/investments/[id]/goals/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:g,serverHooks:v}=m,f="/api/investments/[id]/goals/route";function h(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:g})}},2334:(e,t,n)=>{n.d(t,{db:()=>s,_:()=>o});let r=require("@prisma/client"),o=globalThis.prisma??new r.PrismaClient,s=o}};var t=require("../../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[5923,7146],()=>n(7916));module.exports=r})();