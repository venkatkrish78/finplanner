"use strict";(()=>{var e={};e.id=2206,e.ids=[2206],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2325:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>y,patchFetch:()=>x,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v});var r={};n.r(r),n.d(r,{DELETE:()=>p,GET:()=>u,PUT:()=>c,dynamic:()=>l});var i=n(921),o=n(7380),s=n(4185),a=n(3878),d=n(9958);let l="force-dynamic";async function u(e,{params:t}){try{let e=await d.db.investment.findUnique({where:{id:t.id},include:{goal:{select:{id:!0,name:!0,goalType:!0,targetAmount:!0,currentAmount:!0}},goalLinks:{include:{goal:{select:{id:!0,name:!0,goalType:!0,targetAmount:!0,currentAmount:!0}}}},category:{select:{id:!0,name:!0,color:!0}},transactions:{orderBy:{date:"desc"}},sips:!0}});if(!e)return a.NextResponse.json({error:"Investment not found"},{status:404});let n=[];e.goal&&n.push({...e.goal,allocation:100,linkType:"direct"}),e.goalLinks&&e.goalLinks.forEach(e=>{n.push({...e.goal,allocation:e.allocation,linkType:"linked",linkId:e.id})});let r={...e,linkedGoals:n};return a.NextResponse.json(r)}catch(e){return console.error("Error fetching investment:",e),a.NextResponse.json({error:"Failed to fetch investment"},{status:500})}}async function c(e,{params:t}){try{let{name:n,symbol:r,currentPrice:i,description:o,goalId:s,categoryId:l,isActive:u}=await e.json(),c={name:n,symbol:r,description:o,goalId:s||null,categoryId:l||null,isActive:u};if(void 0!==i){let e=await d.db.investment.findUnique({where:{id:t.id}});e&&(c.currentPrice=i,c.currentValue=e.quantity*i)}let p=await d.db.investment.update({where:{id:t.id},data:c,include:{goal:{select:{id:!0,name:!0,goalType:!0}},category:{select:{id:!0,name:!0,color:!0}},transactions:{orderBy:{date:"desc"}},sips:!0}});return a.NextResponse.json(p)}catch(e){return console.error("Error updating investment:",e),a.NextResponse.json({error:"Failed to update investment"},{status:500})}}async function p(e,{params:t}){try{return await d.db.investment.delete({where:{id:t.id}}),a.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting investment:",e),a.NextResponse.json({error:"Failed to delete investment"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/investments/[id]/route",pathname:"/api/investments/[id]",filename:"route",bundlePath:"app/api/investments/[id]/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/investments/[id]/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:v,serverHooks:h}=m,y="/api/investments/[id]/route";function x(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}},9958:(e,t,n)=>{n.d(t,{_:()=>i,db:()=>o});var r=n(3524);let i=globalThis.prisma??new r.PrismaClient,o=i}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[5923,7146],()=>n(2325));module.exports=r})();