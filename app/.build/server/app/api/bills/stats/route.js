"use strict";(()=>{var e={};e.id=4819,e.ids=[4819],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8957:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>m,patchFetch:()=>b,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var r={};a.r(r),a.d(r,{GET:()=>p,dynamic:()=>u});var s=a(921),n=a(7380),i=a(4185),l=a(3878),o=a(2334);let u="force-dynamic";async function p(e){try{let e=new Date,t=new Date(e.getFullYear(),e.getMonth(),1),a=new Date(e.getFullYear(),e.getMonth()+1,0),r=new Date;r.setDate(e.getDate()+7);let s=await o._.billInstance.count({where:{dueDate:{gte:t,lte:a}}}),n=await o._.billInstance.count({where:{dueDate:{gte:t,lte:a},status:"PAID"}}),i=await o._.billInstance.count({where:{dueDate:{gte:t,lte:a},status:"PENDING"}}),u=await o._.billInstance.count({where:{dueDate:{lt:e},status:"PENDING"}}),p=await o._.billInstance.count({where:{dueDate:{gte:e,lte:r},status:"PENDING"}});return l.NextResponse.json({totalMonthlyBills:s,paidThisMonth:n,pendingThisMonth:i,overdueCount:u,upcomingWeek:p})}catch(e){return console.error("Error fetching bill stats:",e),l.NextResponse.json({error:"Failed to fetch bill stats"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/bills/stats/route",pathname:"/api/bills/stats",filename:"route",bundlePath:"app/api/bills/stats/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/bills/stats/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:h,serverHooks:g}=c,m="/api/bills/stats/route";function b(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},2334:(e,t,a)=>{a.d(t,{db:()=>n,_:()=>s});let r=require("@prisma/client"),s=globalThis.prisma??new r.PrismaClient,n=s}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[5923,7146],()=>a(8957));module.exports=r})();