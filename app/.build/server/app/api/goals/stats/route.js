"use strict";(()=>{var t={};t.id=1383,t.ids=[1383],t.modules={3524:t=>{t.exports=require("@prisma/client")},399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},426:(t,e,r)=>{r.r(e),r.d(e,{originalPathname:()=>h,patchFetch:()=>A,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>d,staticGenerationAsyncStorage:()=>g});var a={};r.r(a),r.d(a,{GET:()=>p,dynamic:()=>l});var n=r(921),o=r(7380),s=r(4185),u=r(3878),i=r(9958);let l="force-dynamic";async function p(){try{let[t,e]=await Promise.all([i._.financialGoal.findMany({include:{contributions:!0}}),i._.financialGoal.aggregate({_sum:{targetAmount:!0,currentAmount:!0},_count:!0})]),r=t.filter(t=>"ACTIVE"===t.status).length,a=t.filter(t=>"COMPLETED"===t.status).length,n=t.reduce((t,e)=>{let r=e.targetAmount>0?e.currentAmount/e.targetAmount*100:0;return t+Math.min(r,100)},0),o=t.length>0?n/t.length:0,s={totalGoals:e._count,activeGoals:r,completedGoals:a,totalTargetAmount:e._sum.targetAmount||0,totalCurrentAmount:e._sum.currentAmount||0,averageProgress:Math.round(o)};return u.NextResponse.json(s)}catch(t){return console.error("Error fetching goal stats:",t),u.NextResponse.json({error:"Failed to fetch goal stats"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/goals/stats/route",pathname:"/api/goals/stats",filename:"route",bundlePath:"app/api/goals/stats/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/goals/stats/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:d}=c,h="/api/goals/stats/route";function A(){return(0,s.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:g})}},9958:(t,e,r)=>{r.d(e,{_:()=>n,db:()=>o});var a=r(3524);let n=globalThis.prisma??new a.PrismaClient,o=n}};var e=require("../../../../webpack-runtime.js");e.C(t);var r=t=>e(e.s=t),a=e.X(0,[5923,7146],()=>r(426));module.exports=a})();