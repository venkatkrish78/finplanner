"use strict";(()=>{var e={};e.id=4266,e.ids=[4266],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1726:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>v});var r={};n.r(r),n.d(r,{GET:()=>d,POST:()=>c,dynamic:()=>u});var s=n(3277),a=n(5265),o=n(5356),i=n(7076),l=n(6059);let u="force-dynamic";async function d(e,{params:t}){try{let e=t.id,n=await l._.financialGoal.findUnique({where:{id:e},include:{investmentLinks:{include:{investment:{include:{category:!0,transactions:{orderBy:{date:"desc"},take:5}}}}},investments:{include:{category:!0,transactions:{orderBy:{date:"desc"},take:5}}}}});if(!n)return i.NextResponse.json({error:"Goal not found"},{status:404});let r=[...n.investmentLinks.map(e=>({...e.investment,linkId:e.id,allocation:e.allocation,notes:e.notes,allocatedValue:e.investment.currentValue*(e.allocation/100)})),...n.investments.map(e=>({...e,linkId:null,allocation:100,notes:null,allocatedValue:e.currentValue}))];return i.NextResponse.json({goal:{id:n.id,name:n.name,targetAmount:n.targetAmount,currentAmount:n.currentAmount},linkedInvestments:r})}catch(e){return console.error("Error fetching goal investments:",e),i.NextResponse.json({error:"Failed to fetch goal investments"},{status:500})}}async function c(e,{params:t}){try{let n=t.id,{investmentId:r,allocation:s=100,notes:a}=await e.json();if(!r)return i.NextResponse.json({error:"Investment ID is required"},{status:400});if(s<0||s>100)return i.NextResponse.json({error:"Allocation must be between 0 and 100"},{status:400});if(!await l._.financialGoal.findUnique({where:{id:n}}))return i.NextResponse.json({error:"Goal not found"},{status:404});if(!await l._.investment.findUnique({where:{id:r}}))return i.NextResponse.json({error:"Investment not found"},{status:404});if(await l._.investmentGoalLink.findUnique({where:{investmentId_goalId:{investmentId:r,goalId:n}}}))return i.NextResponse.json({error:"Investment is already linked to this goal"},{status:400});let o=await l._.investmentGoalLink.create({data:{investmentId:r,goalId:n,allocation:s,notes:a},include:{investment:{include:{category:!0}},goal:!0}});return i.NextResponse.json(o,{status:201})}catch(e){return console.error("Error linking investment to goal:",e),i.NextResponse.json({error:"Failed to link investment to goal"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/goals/[id]/investments/route",pathname:"/api/goals/[id]/investments",filename:"route",bundlePath:"app/api/goals/[id]/investments/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/goals/[id]/investments/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:v,serverHooks:g}=m,f="/api/goals/[id]/investments/route";function x(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:v})}},6059:(e,t,n)=>{n.d(t,{_:()=>s,db:()=>a});var r=n(3524);let s=globalThis.prisma??new r.PrismaClient,a=s}};var t=require("../../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[5942,3786],()=>n(1726));module.exports=r})();