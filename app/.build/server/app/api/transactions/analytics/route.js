"use strict";(()=>{var t={};t.id=2120,t.ids=[2120],t.modules={399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8123:(t,e,a)=>{a.r(e),a.d(e,{originalPathname:()=>y,patchFetch:()=>d,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>_});var n={};a.r(n),a.d(n,{GET:()=>l,dynamic:()=>i});var o=a(921),r=a(7380),s=a(4185),u=a(3878),c=a(2334);let i="force-dynamic";async function l(t){try{let{searchParams:e}=new URL(t.url),a=parseInt(e.get("year")||new Date().getFullYear().toString()),n=e.get("month"),o=n?parseInt(n):null,r=new Date(a,0,1),s=new Date(a,11,31,23,59,59),i=[];for(let t=1;t<=12;t++){let e=new Date(a,t-1,1),n=new Date(a,t,0,23,59,59),[o,r]=await Promise.all([c._.transaction.aggregate({where:{date:{gte:e,lte:n},type:"INCOME"},_sum:{amount:!0},_count:!0}),c._.transaction.aggregate({where:{date:{gte:e,lte:n},type:"EXPENSE"},_sum:{amount:!0},_count:!0})]);i.push({month:t,year:a,income:o._sum.amount||0,expense:r._sum.amount||0,transaction_count:o._count+r._count})}let l={date:{gte:r,lte:s}};if(o){let t=new Date(a,o-1,1),e=new Date(a,o,0,23,59,59);l={date:{gte:t,lte:e}}}let m=(await c._.transaction.findMany({where:l,include:{category:!0}})).reduce((t,e)=>{e.category?.name,e.type;let a=t.find(t=>t.category_name===e.category?.name&&t.transaction_type===e.type);return a?(a.total_amount+=e.amount,a.transaction_count+=1):t.push({category_name:e.category?.name||"Uncategorized",category_color:e.category?.color||"#3B82F6",transaction_type:e.type,total_amount:e.amount,transaction_count:1}),t},[]),p=null;if(o){let t=new Date(a,o-1,1),e=new Date(a,o,0,23,59,59),[n,r,s]=await Promise.all([c._.transaction.aggregate({where:{date:{gte:t,lte:e},type:"INCOME"},_sum:{amount:!0},_count:!0}),c._.transaction.aggregate({where:{date:{gte:t,lte:e},type:"EXPENSE"},_sum:{amount:!0},_count:!0}),c._.transaction.count({where:{date:{gte:t,lte:e}}})]);p={total_income:n._sum.amount||0,total_expense:r._sum.amount||0,total_transactions:s,income_count:n._count,expense_count:r._count}}let[_,g,y]=await Promise.all([c._.transaction.aggregate({where:{date:{gte:r,lte:s},type:"INCOME"},_sum:{amount:!0},_count:!0}),c._.transaction.aggregate({where:{date:{gte:r,lte:s},type:"EXPENSE"},_sum:{amount:!0},_count:!0}),c._.transaction.count({where:{date:{gte:r,lte:s}}})]),d={total_income:_._sum.amount||0,total_expense:g._sum.amount||0,total_transactions:y,income_count:_._count,expense_count:g._count};return u.NextResponse.json({monthlyTrends:i||[],categoryBreakdown:m||[],monthlySummary:p||null,yearlySummary:d||null,year:a,month:o})}catch(t){return console.error("Error fetching transaction analytics:",t),u.NextResponse.json({error:"Failed to fetch transaction analytics"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/transactions/analytics/route",pathname:"/api/transactions/analytics",filename:"route",bundlePath:"app/api/transactions/analytics/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/transactions/analytics/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:_,serverHooks:g}=m,y="/api/transactions/analytics/route";function d(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:_})}},2334:(t,e,a)=>{a.d(e,{db:()=>r,_:()=>o});let n=require("@prisma/client"),o=globalThis.prisma??new n.PrismaClient,r=o}};var e=require("../../../../webpack-runtime.js");e.C(t);var a=t=>e(e.s=t),n=e.X(0,[5923,7146],()=>a(8123));module.exports=n})();