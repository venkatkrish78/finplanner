"use strict";(()=>{var e={};e.id=7552,e.ids=[7552],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2861:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{DELETE:()=>p,PUT:()=>d,dynamic:()=>u});var n=r(921),o=r(7380),s=r(4185),i=r(3878),c=r(2334);let u="force-dynamic";async function d(e,{params:t}){try{let r=await e.json(),{id:a}=t,n=await c._.transaction.update({where:{id:a},data:{amount:r.amount,type:r.type,description:r.description,merchant:r.merchant,date:new Date(r.date),categoryId:r.categoryId},include:{category:!0}});return i.NextResponse.json(n)}catch(e){return console.error("Error updating transaction:",e),i.NextResponse.json({error:"Failed to update transaction"},{status:500})}}async function p(e,{params:t}){try{let{id:e}=t;return await c._.transaction.delete({where:{id:e}}),i.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting transaction:",e),i.NextResponse.json({error:"Failed to delete transaction"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/transactions/[id]/route",pathname:"/api/transactions/[id]",filename:"route",bundlePath:"app/api/transactions/[id]/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/transactions/[id]/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:y}=l,g="/api/transactions/[id]/route";function x(){return(0,s.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:h})}},2334:(e,t,r)=>{r.d(t,{db:()=>o,_:()=>n});let a=require("@prisma/client"),n=globalThis.prisma??new a.PrismaClient,o=n}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[5923,7146],()=>r(2861));module.exports=a})();