"use strict";(()=>{var t={};t.id=9300,t.ids=[9300],t.modules={3524:t=>{t.exports=require("@prisma/client")},399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6792:(t,e,a)=>{a.r(e),a.d(e,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>d,staticGenerationAsyncStorage:()=>g});var n={};a.r(n),a.d(n,{GET:()=>l,dynamic:()=>c});var r=a(3277),o=a(5265),s=a(5356),i=a(7076),u=a(6059);let c="force-dynamic";async function l(t){try{let t=new Date,e=new Date;e.setMonth(e.getMonth()-6);let a=new Date(t.getFullYear(),t.getMonth(),1),n=new Date(t.getFullYear(),t.getMonth()+1,0,23,59,59),[r,o,s,c]=await Promise.all([u._.transaction.aggregate({where:{type:"INCOME",date:{gte:a,lte:n}},_sum:{amount:!0}}),u._.transaction.aggregate({where:{type:"EXPENSE",date:{gte:a,lte:n}},_sum:{amount:!0}}),u._.transaction.count(),u._.transaction.groupBy({by:["categoryId"],where:{type:"EXPENSE",date:{gte:a,lte:n}},_sum:{amount:!0}})]),l=c.map(t=>t.categoryId),m=(await u._.category.findMany({where:{id:{in:l}}})).reduce((t,e)=>(t[e.id]=e,t),{}),p=r._sum.amount||0,g=o._sum.amount||0,d=[];for(let t=5;t>=0;t--){let e=new Date;e.setMonth(e.getMonth()-t);let a=new Date(e.getFullYear(),e.getMonth(),1),n=new Date(e.getFullYear(),e.getMonth()+1,0,23,59,59),[r,o]=await Promise.all([u._.transaction.aggregate({where:{type:"INCOME",date:{gte:a,lte:n}},_sum:{amount:!0}}),u._.transaction.aggregate({where:{type:"EXPENSE",date:{gte:a,lte:n}},_sum:{amount:!0}})]);d.push({month:e.toLocaleDateString("en-US",{month:"short"}),income:r._sum.amount||0,expenses:o._sum.amount||0})}let h=c.map(t=>({category:m[t.categoryId]?.name||"Unknown",amount:t._sum.amount||0,color:m[t.categoryId]?.color||"#6B7280"}));return i.NextResponse.json({totalIncome:p,totalExpenses:g,balance:p-g,transactionCount:s,monthlyData:d,categoryData:h})}catch(t){return console.error("Error fetching transaction stats:",t),i.NextResponse.json({error:"Failed to fetch transaction stats"},{status:500})}}let m=new r.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/transactions/stats/route",pathname:"/api/transactions/stats",filename:"route",bundlePath:"app/api/transactions/stats/route"},resolvedPagePath:"/home/ubuntu/moneymitra/app/app/api/transactions/stats/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:d}=m,h="/api/transactions/stats/route";function y(){return(0,s.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:g})}},6059:(t,e,a)=>{a.d(e,{_:()=>r,db:()=>o});var n=a(3524);let r=globalThis.prisma??new n.PrismaClient,o=r}};var e=require("../../../../webpack-runtime.js");e.C(t);var a=t=>e(e.s=t),n=e.X(0,[5942,3786],()=>a(6792));module.exports=n})();